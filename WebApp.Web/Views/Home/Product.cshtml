@model WebApp.Web.Models.Product

@{
    ViewData["Title"] = Model.Name;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-6">
            <img src="@Model.ImageUrl" alt="@Model.Name" class="img-fluid rounded shadow">
        </div>
        <div class="col-md-6">
            <h2 class="mb-3">@Model.Name</h2>
            @if (Model.IsCustomizable)
            {
                <div class="customizable-badge mb-3">
                    <i class="bi bi-pencil-square"></i>
                    ניתן להתאמה אישית
                </div>
            }
            <p class="lead mb-4">@Model.Description</p>
            <div class="price-box mb-4">
                <h4 class="mb-2">מחיר:</h4>
                <p class="h3 text-primary">
                    $@Model.Price.ToString("F2") / ₪@((Model.Price * 3.7m).ToString("F0")) ש"ח
                </p>
            </div>
            <div class="category-box mb-4">
                <h4 class="mb-2">קטגוריה:</h4>
                <p class="h5">@Model.Category</p>
            </div>
            <div class="actions mt-4">
                @if (Model.IsCustomizable)
                {
                    <button class="btn btn-primary mb-2 w-100" onclick="startCustomization(@Model.Id)">
                        <i class="bi bi-pencil-square me-2"></i>
                        התחל התאמה אישית
                    </button>
                }
                <button class="btn btn-success mb-2 w-100" onclick="addToCart(@Model.Id)">
                    <i class="bi bi-cart-plus me-2"></i>
                    הוספה לסל
                </button>
                <a href="javascript:history.back()" class="btn btn-secondary w-100">
                    <i class="bi bi-arrow-right me-2"></i>
                    חזרה לחיפוש מתנות
                </a>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function startCustomization(productId) {
            // בשלב זה נפתח חלון מודאל להתאמה אישית
            alert('פיצ׳ר זה יהיה זמין בקרוב!');
        }

        async function addToCart(productId) {
            try {
                const cart = JSON.parse(localStorage.getItem('cart') || '[]');
                
                const product = {
                    id: productId,
                    name: '@Model.Name',
                    price: @Model.Price,
                    imageUrl: '@Model.ImageUrl',
                    isCustomizable: @Json.Serialize(Model.IsCustomizable)
                };

                const existingItem = cart.find(item => item.productId === productId);
                if (existingItem) {
                    existingItem.quantity += 1;
                } else {
                    cart.push({
                        productId: productId,
                        product: product,
                        quantity: 1
                    });
                }

                localStorage.setItem('cart', JSON.stringify(cart));
                const totalItems = cart.reduce((sum, item) => sum + item.quantity, 0);
                updateStoredCartCount(totalItems);

                try {
                    await fetch('https://localhost:7001/api/cart', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            productId: productId,
                            quantity: 1
                        })
                    });
                } catch (serverError) {
                    console.log('Could not sync with server, but cart was updated locally');
                }

                // הודעת הצלחה
                alert('המוצר נוסף לסל בהצלחה!');
            } catch (error) {
                console.error('Error:', error);
                alert('אירעה שגיאה בהוספת המוצר לסל');
            }
        }
    </script>

    <style>
        .price-box, .category-box {
            background-color: #f8f9fa;
            padding: 1rem;
            border-radius: 0.5rem;
        }

        .customizable-badge {
            background-color: #e3f2fd;
            color: #0d6efd;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            font-size: 1rem;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .actions {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }

        .btn i {
            font-size: 1.1rem;
        }
    </style>
} 