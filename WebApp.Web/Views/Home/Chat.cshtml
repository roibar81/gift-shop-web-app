@{
    ViewData["Title"] = "Gift Advisor Chat";
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Gift Advisor Chat</h5>
                </div>
                <div class="card-body">
                    <div id="chat-messages" class="mb-4" style="height: 400px; overflow-y: auto;">
                        <div class="system-message">
                            <p class="mb-2">ðŸ‘‹ Hello! I'm your gift advisor. I can help you find the perfect gift. What kind of gift are you looking for?</p>
                        </div>
                    </div>
                    <form id="chat-form" class="d-flex">
                        <input type="text" id="message-input" class="form-control me-2" placeholder="Type your message...">
                        <button type="submit" class="btn btn-primary">Send</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .system-message {
            background-color: #f8f9fa;
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 10px;
        }
        
        .user-message {
            background-color: #007bff;
            color: white;
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 10px;
            text-align: right;
        }
        
        .assistant-message {
            background-color: #e9ecef;
            padding: 10px;
            border-radius: 10px;
            margin-bottom: 10px;
        }
    </style>
}

@section Scripts {
    <script>
        const chatMessages = document.getElementById('chat-messages');
        const chatForm = document.getElementById('chat-form');
        const messageInput = document.getElementById('message-input');

        chatForm.addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const message = messageInput.value.trim();
            if (!message) return;
            
            // Add user message to chat
            const userMessageDiv = document.createElement('div');
            userMessageDiv.className = 'user-message';
            userMessageDiv.innerHTML = `<p class="mb-0">${message}</p>`;
            chatMessages.appendChild(userMessageDiv);
            
            // Clear input
            messageInput.value = '';
            
            try {
                const response = await fetch('https://localhost:7001/api/chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(message)
                });
                
                const data = await response.json();
                
                // Add assistant message to chat
                const assistantMessageDiv = document.createElement('div');
                assistantMessageDiv.className = 'assistant-message';
                assistantMessageDiv.innerHTML = `<p class="mb-0">${data.message}</p>`;
                chatMessages.appendChild(assistantMessageDiv);
            } catch (error) {
                console.error('Error:', error);
                // Add error message to chat
                const errorMessageDiv = document.createElement('div');
                errorMessageDiv.className = 'system-message';
                errorMessageDiv.innerHTML = `<p class="mb-0 text-danger">Sorry, there was an error processing your request.</p>`;
                chatMessages.appendChild(errorMessageDiv);
            }
            
            // Scroll to bottom
            chatMessages.scrollTop = chatMessages.scrollHeight;
        });
    </script>
} 